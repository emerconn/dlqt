name: CMD

on:
  push:
    branches: [ '*' ]
    paths:
    - 'cmd/dlqtools/**'
    - 'internal/**'
    - 'go.mod'
    - 'go.sum'
    - '.github/workflows/cmd.yml'
  pull_request:
    branches: [ '*' ]
    paths:
    - 'cmd/dlqtools/**'
    - 'internal/**'
    - 'go.mod'
    - 'go.sum'
    - '.github/workflows/cmd.yml'
  release:
    types: [ created ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cmd: [ dlqt, dlqtools ]
        goos: [ linux, windows, darwin ]
        goarch: [ amd64, arm64 ]

    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version-file: ./go.mod

    - name: Build
      run: |
        CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ${{ matrix.cmd }}-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/${{ matrix.cmd }}
        if [ "${{ matrix.goos }}" = "windows" ]; then
          mv ${{ matrix.cmd }}-${{ matrix.goos }}-${{ matrix.goarch }} ${{ matrix.cmd }}-${{ matrix.goos }}-${{ matrix.goarch }}.exe
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.cmd }}-${{ matrix.goos }}-${{ matrix.goarch }}
        path: ${{ matrix.cmd }}-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v5
      with:
        path: artifacts

    - name: Upload to release
      uses: softprops/action-gh-release@v2
      with:
        files: artifacts/**/*
