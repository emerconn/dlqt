name: API

on:
  push:
    branches: [ '*' ]
    paths:
    - 'api/**'
    - 'internal/**'
    - 'go.mod'
    - 'go.sum'
    - '.github/workflows/api.yml'
  pull_request:
    branches: [ '*' ]
    paths:
    - 'api/**'
    - 'internal/**'
    - 'go.mod'
    - 'go.sum'
    - '.github/workflows/api.yml'
  release:
    types: [ created ]

jobs:
  build-slim:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    outputs:
      image-tags: ${{ steps.meta.outputs.tags }}

    steps:
    - uses: actions/checkout@v5

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/api
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=ref,event=branch
          type=ref,event=pr
          type=sha

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push slim image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./api/Dockerfile
        target: slim
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  build-debug:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    outputs:
      image-tags: ${{ steps.meta.outputs.tags }}

    steps:
    - uses: actions/checkout@v5

    - name: Docker meta for debug
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/api
        tags: |
          type=semver,pattern={{version}}-debug
          type=semver,pattern={{major}}.{{minor}}-debug
          type=semver,pattern={{major}}-debug
          type=ref,event=branch,suffix=-debug
          type=ref,event=pr,suffix=-debug
          type=sha,suffix=-debug

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push debug image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./api/Dockerfile
        target: debug
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-slim
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    concurrency:
      group: deploy-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Extract SHA tag
      id: sha-tag
      run: |
        SHA_TAG=$(echo '${{ needs.build-slim.outputs.image-tags }}' | grep -E ':sha-[a-f0-9]{7}$' | head -n1)
        echo "tag=${SHA_TAG}" >> $GITHUB_OUTPUT

    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ vars.AZURE_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID }}
        subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy Container App
      uses: azure/container-apps-deploy-action@v2
      with:
        imageToDeploy: ${{ steps.sha-tag.outputs.tag }}
        containerAppName: ca-dlqt-api
        resourceGroup: rg-dlqt

  trivy:
    runs-on: ubuntu-latest
    needs: build-slim
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Extract SHA tag
      id: sha-tag
      run: |
        SHA_TAG=$(echo '${{ needs.build-slim.outputs.image-tags }}' | grep -E ':sha-[a-f0-9]{7}$' | head -n1)
        echo "tag=${SHA_TAG}" >> $GITHUB_OUTPUT

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.33.1
      with:
        image-ref: ${{ steps.sha-tag.outputs.tag }}
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
