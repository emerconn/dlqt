name: Infra

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
    - 'infra/**'
    - '.github/workflows/infra.yml'
  pull_request:
    branches: [ "main" ]
    paths:
    - 'infra/**'
    - '.github/workflows/infra.yml'

defaults:
  run:
    working-directory: infra
    shell: bash

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  infra:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Azure Login
      uses: Azure/login@v2
      with:
        client-id: ${{ vars.AZURE_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID }}
        subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - uses: opentofu/setup-opentofu@v1

    - name: OpenTofu fmt
      id: fmt
      run: tofu fmt -check
      env:
        ARM_USE_OIDC: true
        ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - name: OpenTofu Init
      id: init
      run: tofu init
      env:
        ARM_USE_OIDC: true
        ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - name: OpenTofu Validate
      id: validate
      run: tofu validate -no-color
      env:
        ARM_USE_OIDC: true
        ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - name: OpenTofu Plan
      id: plan
      run: tofu plan -input=false -no-color
      env:
        ARM_USE_OIDC: true
        ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - uses: actions/github-script@v8
      if: github.event_name == 'pull_request'
      env:
        PLAN: "tofu

          ${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### OpenTofu Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### OpenTofu Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### OpenTofu Validation ü§ñ\`${{ steps.validate.outcome }}\`
          <details><summary>Validation Output</summary>

          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`

          </details>

          #### OpenTofu Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Tofu Apply
      id: apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: tofu apply -auto-approve -input=false
